{"version":3,"file":"static/js/780.3eef1315.chunk.js","mappings":"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","sources":["components/Page.js","view/pages/NotFoundPage.js","../node_modules/@mui/material/useMediaQuery/useMediaQuery.js"],"sourcesContent":["import React, { forwardRef } from \"react\"\nimport { Helmet, HelmetProvider } from \"react-helmet-async\"\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <HelmetProvider>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      </HelmetProvider>\n      {children}\n    </div>\n  )\n})\n\nexport default Page\n","import React from 'react';\nimport { Box, useMediaQuery, Typography } from '@mui/material';\n\n\nimport Page from '../../../src/components/Page'\n\nconst NotFoundPage = () => {\n  const mobileDevice = useMediaQuery('(max-width:650px)');\n\n  return (\n    <Page title=\"Not Found Page\">\n    \n        <Box\n          height={mobileDevice ? '50vh' : '100vh'}\n          display={'flex'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          alignItems={'center'}\n          style={{\n            backgroundColor: \"green\",\n      \n          }}\n        >\n          <Typography\n          variant={mobileDevice ? 'h4' : 'h1'}\n          color=\"white\"\n          sx={({ breakpoints, typography: { size } }) => ({\n            [breakpoints.down(\"md\")]: {\n            \n            },\n          })}\n          style={{ display: \"inline\", padding: \"5px\" }}\n        >\n          404 Page Not Found\n        </Typography>\n        </Box>\n    \n    </Page>\n  );\n};\n\nexport default NotFoundPage;\n","import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch();\n    // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n\n  // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}"],"names":["forwardRef","_ref","ref","children","title","rest","_jsxs","_jsx","HelmetProvider","Helmet","NotFoundPage","mobileDevice","useMediaQuery","Page","Box","height","display","flexDirection","justifyContent","alignItems","style","backgroundColor","Typography","variant","color","sx","breakpoints","typography","size","down","padding","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","match","setMatch","React","matches","useEnhancedEffect","active","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","getSnapshot","subscribe","mediaQueryList","notify","queryInput","options","arguments","length","undefined","theme","useTheme","supportMatchMedia","window","getThemeProps","name","props","replace"],"sourceRoot":""}